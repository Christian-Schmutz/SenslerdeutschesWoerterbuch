name: E2e tests with Docker Compose

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create .env file
        run: |
          # Start with defaults
          cp .env.defaults .env

          # Add a newline to ensure clean append
          echo "" >> .env
          
          # Add sensitive values
          echo "ELASTIC_ADMIN_PASSWORD=${{ secrets.ELASTIC_ADMIN_PASSWORD || 'changeme' }}" >> .env

      - name: Debug .env file
        run: |
          echo "CONTENTS OF .env FILE:"
          cat .env
          
          echo "ENVIRONMENT VARIABLES IN DOCKER COMPOSE:"
          docker compose config

      - name: Run setup and prepare environment
        run: |
          docker compose up -d elasticsearch proxy backend
          echo "✅ Setup completed successfully"

      - name: Wait for proxy to be ready
        run: |
          echo "Waiting for proxy container to be ready..."
          # First check if container is running
          for i in {1..12}; do
            if docker compose ps proxy | grep -q "Up"; then
              echo "✅ Proxy container is running"
              break
            fi
            
            if [ $i -eq 12 ]; then
              echo "❌ Proxy container failed to start"
              docker compose ps
              docker compose logs proxy
              exit 1
            fi
            
            echo "Waiting for proxy... (attempt $i/12)"
            sleep 5
          done

      - name: Check services through proxy
        run: |
          echo "Checking services via proxy..."
          
          # Wait for backend health endpoint
          for i in {1..12}; do
            echo "Checking backend via proxy (attempt $i/12)..."
            HEALTH=$(docker compose exec -T proxy curl -s http://backend:8000/elastic-health || echo "failed")
            echo "Backend health: $HEALTH"
            
            if echo "$HEALTH" | grep -q "healthy" || echo "$HEALTH" | grep -q "status"; then
              echo "✅ Backend is responding"
              break
            fi
            
            if [ $i -eq 12 ]; then
              echo "❌ Backend is not responding properly"
              docker compose logs backend
              exit 1
            fi
            
            sleep 5
          done
          
          # Initialize Elasticsearch via backend
          echo "Initializing Elasticsearch data..."
          RESPONSE=$(docker compose exec -T proxy curl -s -X POST http://backend:8000/elastic-reset || echo "failed")
          echo "Elasticsearch initialization: $RESPONSE"
          
          if echo "$RESPONSE" | grep -q "error"; then
            echo "⚠️ Data initialization returned an error but continuing..."
          else
            echo "✅ Data initialization completed"
          fi

      - name: Debug container networking
        if: always()
        run: |
          echo "==== CONTAINER STATUS ===="
          docker compose ps
          
          echo "==== ELASTICSEARCH STATUS ===="
          docker compose exec -T elasticsearch curl -s -u elastic:${{ secrets.ELASTIC_ADMIN_PASSWORD}} http://localhost:9200/_cat/indices
          docker compose exec -T elasticsearch curl -s -u elastic:${{ secrets.ELASTIC_ADMIN_PASSWORD}} http://localhost:9200/_security/user
          
          echo "==== PROXY TEST ===="
          docker compose exec -T proxy curl -s -u dictionary_reader:thisisgonnabepublic -H "Content-Type: application/json" http://elasticsearch:9200/dictionary/_search -d '{"query":{"match_all":{}}}'
          docker compose exec -T proxy curl -s http://backend:8000/elastic-health
          
          echo "==== TEST FROM E2E CONTAINER ===="
          docker compose run --rm e2e curl -s -v http://proxy/
          docker compose run --rm e2e curl -s -v -u dictionary_reader:thisisgonnabepublic -H "Content-Type: application/json" http://proxy/elastic/_search -d '{"query":{"match":{"term":"wundere"}}}'

      - name: Run E2E tests
        run: docker compose up e2e --exit-code-from e2e
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1

      - name: Save Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./e2e/playwright-report/
          retention-days: 30

      - name: Save test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: ./e2e/test-results/
          retention-days: 7